.TH "deque" 3 "Thu Jun 2 2016" "Version 2.0.0" "ACP Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
deque \- ACP Middle Layer Dara Library Deque
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBacp_deque_t\fP"
.br
.ti -1c
.RI "struct \fBacp_deque_it_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBacp_assign_deque\fP (\fBacp_deque_t\fP deque1, \fBacp_deque_t\fP deque2)"
.br
.RI "\fIDeque assignment\&. \fP"
.ti -1c
.RI "void \fBacp_assign_range_deque\fP (\fBacp_deque_t\fP deque, \fBacp_deque_it_t\fP start, \fBacp_deque_it_t\fP end)"
.br
.RI "\fIDeque assignment with range\&. \fP"
.ti -1c
.RI "\fBacp_ga_t\fP \fBacp_at_deque\fP (\fBacp_deque_t\fP deque, int index)"
.br
.RI "\fIQuery for a global address of any point on a deque type data\&. \fP"
.ti -1c
.RI "\fBacp_deque_it_t\fP \fBacp_begin_deque\fP (\fBacp_deque_t\fP deque)"
.br
.RI "\fIQuery for the iterator of the head of deque data\&. \fP"
.ti -1c
.RI "size_t \fBacp_capacity_deque\fP (\fBacp_deque_t\fP deque)"
.br
.RI "\fICapacity of deque\&. \fP"
.ti -1c
.RI "void \fBacp_clear_deque\fP (\fBacp_deque_t\fP deque)"
.br
.RI "\fIDeque elimination\&. \fP"
.ti -1c
.RI "\fBacp_deque_t\fP \fBacp_create_deque\fP (size_t size, int rank)"
.br
.RI "\fIDeque creation\&. \fP"
.ti -1c
.RI "void \fBacp_destroy_deque\fP (\fBacp_deque_t\fP deque)"
.br
.RI "\fIDeque destruction\&. \fP"
.ti -1c
.RI "int \fBacp_empty_deque\fP (\fBacp_deque_t\fP deque)"
.br
.RI "\fIQuery for deque empty\&. \fP"
.ti -1c
.RI "\fBacp_deque_it_t\fP \fBacp_end_deque\fP (\fBacp_deque_t\fP deque)"
.br
.RI "\fIQuery for the iterator of just behind of the end of deque data\&. \fP"
.ti -1c
.RI "\fBacp_deque_it_t\fP \fBacp_erase_deque\fP (\fBacp_deque_it_t\fP it, size_t size)"
.br
.RI "\fIDeletion of the deque data\&. \fP"
.ti -1c
.RI "\fBacp_deque_it_t\fP \fBacp_erase_range_deque\fP (\fBacp_deque_it_t\fP start, \fBacp_deque_it_t\fP end)"
.br
.RI "\fIDeletion of the deque data from 'start' to 'end'\&. \fP"
.ti -1c
.RI "\fBacp_deque_it_t\fP \fBacp_insert_deque\fP (\fBacp_deque_it_t\fP it, const \fBacp_ga_t\fP ga, size_t size)"
.br
.RI "\fIInsertion of the deque data\&. \fP"
.ti -1c
.RI "\fBacp_deque_it_t\fP \fBacp_insert_range_deque\fP (\fBacp_deque_it_t\fP it, \fBacp_deque_it_t\fP start, \fBacp_deque_it_t\fP end)"
.br
.RI "\fIInsertion of the deque data from 'start' to 'end'\&. \fP"
.ti -1c
.RI "void \fBacp_pop_back_deque\fP (\fBacp_deque_t\fP deque, size_t size)"
.br
.RI "\fIData deletion at the end of the deque data\&. \fP"
.ti -1c
.RI "void \fBacp_pop_front_deque\fP (\fBacp_deque_t\fP deque, size_t size)"
.br
.RI "\fIData deletion at the head of the deque data\&. \fP"
.ti -1c
.RI "void \fBacp_push_back_deque\fP (\fBacp_deque_t\fP deque, const \fBacp_ga_t\fP ga, size_t size)"
.br
.RI "\fIData addition at the end of the deque data\&. \fP"
.ti -1c
.RI "void \fBacp_push_front_deque\fP (\fBacp_deque_t\fP deque, const \fBacp_ga_t\fP ga, size_t size)"
.br
.RI "\fIData addition at the end of the deque data\&. \fP"
.ti -1c
.RI "void \fBacp_reserve_deque\fP (\fBacp_deque_t\fP deque, size_t size)"
.br
.RI "\fIReservation of a region in the deque type data\&. \fP"
.ti -1c
.RI "size_t \fBacp_size_deque\fP (\fBacp_deque_t\fP deque)"
.br
.RI "\fIQuery of the data size in the deque\&. \fP"
.ti -1c
.RI "void \fBacp_swap_deque\fP (\fBacp_deque_t\fP deque1, \fBacp_deque_t\fP deque2)"
.br
.RI "\fIDeque swap\&. \fP"
.ti -1c
.RI "\fBacp_deque_it_t\fP \fBacp_advance_deque_it\fP (\fBacp_deque_it_t\fP it, int n)"
.br
.RI "\fIAdvancement of an iterator for deque type data\&. \fP"
.ti -1c
.RI "\fBacp_pair_t\fP \fBacp_dereference_deque_it\fP (\fBacp_deque_it_t\fP it, size_t size)"
.br
.RI "\fIQuery of the global address of a reference of deque tyep iterator\&. \fP"
.ti -1c
.RI "int \fBacp_distance_deque_it\fP (\fBacp_deque_it_t\fP first, \fBacp_deque_it_t\fP last)"
.br
.RI "\fIQuery of the distance of two iterators of deque type data between 'first' and 'last'\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
ACP Middle Layer Data Library Deque 
.SH "Function Documentation"
.PP 
.SS "\fBacp_deque_it_t\fP acp_advance_deque_it (\fBacp_deque_it_t\fP it, int n)"

.PP
Advancement of an iterator for deque type data\&. 
.PP
\fBParameters:\fP
.RS 4
\fIit\fP The iterator of deque type data 
.br
\fIn\fP The number for advancing 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI\fBacp_deque_it_t\fP\fP The advanced iterator of deque type data 
.RE
.PP

.SS "void acp_assign_deque (\fBacp_deque_t\fP deque1, \fBacp_deque_t\fP deque2)"

.PP
Deque assignment\&. Copy Deque data between two vectors\&.
.PP
\fBParameters:\fP
.RS 4
\fIdeque1\fP A reference of destination deque data\&. 
.br
\fIdeque2\fP A reference of source deque data\&. 
.RE
.PP

.SS "void acp_assign_range_deque (\fBacp_deque_t\fP deque, \fBacp_deque_it_t\fP start, \fBacp_deque_it_t\fP end)"

.PP
Deque assignment with range\&. Copy deque data from the point of 'start' to 'end'\&.
.PP
\fBParameters:\fP
.RS 4
\fIdeque\fP A reference of destination deque data\&. 
.br
\fIstart\fP A deque type data iterator for pointing the starting address 
.br
\fIend\fP A deque type data iterator for pointing the end address 
.RE
.PP

.SS "\fBacp_ga_t\fP acp_at_deque (\fBacp_deque_t\fP deque, int index)"

.PP
Query for a global address of any point on a deque type data\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdeque\fP A reference of deque data 
.br
\fIindex\fP The relative point from the head of deque data 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIACP_GA_NULL\fP Fail 
.br
\fIotherwise\fP A global address of deque data\&. 
.RE
.PP

.SS "\fBacp_deque_it_t\fP acp_begin_deque (\fBacp_deque_t\fP deque)"

.PP
Query for the iterator of the head of deque data\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdeque\fP A reference of deque data\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI\fBacp_deque_it_t\fP\fP An iterator of the head of deque data 
.RE
.PP

.SS "size_t acp_capacity_deque (\fBacp_deque_t\fP deque)"

.PP
Capacity of deque\&. Query for the capacity of the deque type data
.PP
\fBParameters:\fP
.RS 4
\fIdeque\fP A reference of deque type data 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIsize_t\fP The size of deque type data 
.RE
.PP

.SS "void acp_clear_deque (\fBacp_deque_t\fP deque)"

.PP
Deque elimination\&. Set the size of the deque to be zero\&.
.PP
\fBParameters:\fP
.RS 4
\fIdeque\fP A reference of deque data\&. 
.RE
.PP

.SS "\fBacp_deque_t\fP acp_create_deque (size_t size, int rank)"

.PP
Deque creation\&. Creates a deque type data on any process\&.
.PP
\fBParameters:\fP
.RS 4
\fIsize\fP Size of element\&. 
.br
\fIrank\fP Rank number\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fImember ga == ACP_GA_NULL\fP Fail 
.br
\fIotherwise\fP A reference of created deque data\&. 
.RE
.PP

.SS "\fBacp_pair_t\fP acp_dereference_deque_it (\fBacp_deque_it_t\fP it, size_t size)"

.PP
Query of the global address of a reference of deque tyep iterator\&. 
.PP
\fBParameters:\fP
.RS 4
\fIit\fP The iterator of deque type data 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIacp_ga_t\fP The global address of a reference of deque type iterator 
.RE
.PP

.SS "void acp_destroy_deque (\fBacp_deque_t\fP deque)"

.PP
Deque destruction\&. Destroies a deque type data\&.
.PP
\fBParameters:\fP
.RS 4
\fIdeque\fP A reference of deque data\&. 
.RE
.PP

.SS "int acp_distance_deque_it (\fBacp_deque_it_t\fP first, \fBacp_deque_it_t\fP last)"

.PP
Query of the distance of two iterators of deque type data between 'first' and 'last'\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfirst\fP The iterator for head 
.br
\fIlast\fP The iterator for end 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIint\fP The distance between 'first' and 'last' 
.RE
.PP

.SS "int acp_empty_deque (\fBacp_deque_t\fP deque)"

.PP
Query for deque empty\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdeque\fP A reference of deque data\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI1\fP Empty 
.br
\fI0\fP There is a deque data 
.RE
.PP

.SS "\fBacp_deque_it_t\fP acp_end_deque (\fBacp_deque_t\fP deque)"

.PP
Query for the iterator of just behind of the end of deque data\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdeque\fP A reference of deque data\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI\fBacp_deque_it_t\fP\fP An iterator of just behind of the end of deque data 
.RE
.PP

.SS "\fBacp_deque_it_t\fP acp_erase_deque (\fBacp_deque_it_t\fP it, size_t size)"

.PP
Deletion of the deque data\&. 
.PP
\fBParameters:\fP
.RS 4
\fIit\fP An iterator of deque data to erase 
.br
\fIsize\fP The size of data to erase 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI\fBacp_deque_it_t\fP\fP An iterator of just behind of the deleted deque data 
.RE
.PP

.SS "\fBacp_deque_it_t\fP acp_erase_range_deque (\fBacp_deque_it_t\fP start, \fBacp_deque_it_t\fP end)"

.PP
Deletion of the deque data from 'start' to 'end'\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstart\fP The iterator of deque data to erase 
.br
\fIend\fP The iterator of just behind of the deleting deque data 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI\fBacp_deque_it_t\fP\fP The iterator of just behind of the deleted deque data 
.RE
.PP

.SS "\fBacp_deque_it_t\fP acp_insert_deque (\fBacp_deque_it_t\fP it, const \fBacp_ga_t\fP ga, size_t size)"

.PP
Insertion of the deque data\&. 
.PP
\fBParameters:\fP
.RS 4
\fIit\fP An iterator of the point for inserting data 
.br
\fIga\fP The global address of the data to insert 
.br
\fIsize\fP The size of the data to insert 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI\fBacp_deque_it_t\fP\fP An iterator of head address of the inserted data 
.RE
.PP

.SS "\fBacp_deque_it_t\fP acp_insert_range_deque (\fBacp_deque_it_t\fP it, \fBacp_deque_it_t\fP start, \fBacp_deque_it_t\fP end)"

.PP
Insertion of the deque data from 'start' to 'end'\&. 
.PP
\fBParameters:\fP
.RS 4
\fIit\fP An iterator of the point for inserting data 
.br
\fIstart\fP The iterator of head address of the data to insert 
.br
\fIend\fP The iterator of just behind address of the data to insert 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fI\fBacp_deque_it_t\fP\fP An iterator of head address of the inserted data 
.RE
.PP

.SS "void acp_pop_back_deque (\fBacp_deque_t\fP deque, size_t size)"

.PP
Data deletion at the end of the deque data\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdeque\fP A reference of the deque data to erase 
.br
\fIsize\fP The size of data to erase 
.RE
.PP

.SS "void acp_pop_front_deque (\fBacp_deque_t\fP deque, size_t size)"

.PP
Data deletion at the head of the deque data\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdeque\fP A reference of the deque data to erase 
.br
\fIsize\fP The size of data to erase 
.RE
.PP

.SS "void acp_push_back_deque (\fBacp_deque_t\fP deque, const \fBacp_ga_t\fP ga, size_t size)"

.PP
Data addition at the end of the deque data\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdeque\fP A reference of the deque to which data is added 
.br
\fIga\fP The global address of the data to insert 
.br
\fIsize\fP The size of the data to insert 
.RE
.PP

.SS "void acp_push_front_deque (\fBacp_deque_t\fP deque, const \fBacp_ga_t\fP ga, size_t size)"

.PP
Data addition at the end of the deque data\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdeque\fP A reference of the deque to which data is added 
.br
\fIga\fP The global address of the data to insert 
.br
\fIsize\fP The size of the data to insert 
.RE
.PP

.SS "void acp_reserve_deque (\fBacp_deque_t\fP deque, size_t size)"

.PP
Reservation of a region in the deque type data\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdeque\fP A reference of the deque to reserve a region 
.br
\fIsize\fP The number of element 
.RE
.PP

.SS "size_t acp_size_deque (\fBacp_deque_t\fP deque)"

.PP
Query of the data size in the deque\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdeque\fP A referenc of the deque data 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIsize_t\fP The data size in the deque 
.RE
.PP

.SS "void acp_swap_deque (\fBacp_deque_t\fP deque1, \fBacp_deque_t\fP deque2)"

.PP
Deque swap\&. 
.PP
\fBParameters:\fP
.RS 4
\fIv1\fP A reference of deque data to be swapped\&. 
.br
\fIv2\fP Another reference of deque data to be swapped\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for ACP Library from the source code\&.
