.TH "list" 3 "Thu Nov 12 2015" "Version 1.2.0" "ACP Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
list \- ACP Middle Layer Dara Library List
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBacp_list_t\fP"
.br
.ti -1c
.RI "struct \fBacp_list_it_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBacp_assign_list\fP (\fBacp_list_t\fP list1, \fBacp_list_t\fP list2)"
.br
.ti -1c
.RI "void \fBacp_assign_range_list\fP (\fBacp_list_t\fP list, \fBacp_list_it_t\fP start, \fBacp_list_it_t\fP end)"
.br
.ti -1c
.RI "\fBacp_list_it_t\fP \fBacp_back_list\fP (\fBacp_list_t\fP list)"
.br
.ti -1c
.RI "\fBacp_list_it_t\fP \fBacp_begin_list\fP (\fBacp_list_t\fP list)"
.br
.RI "\fIQuery for the head iterator of a list\&. \fP"
.ti -1c
.RI "void \fBacp_clear_list\fP (\fBacp_list_t\fP list)"
.br
.ti -1c
.RI "\fBacp_list_t\fP \fBacp_create_list\fP (int rank)"
.br
.RI "\fIList creation\&. \fP"
.ti -1c
.RI "void \fBacp_destroy_list\fP (\fBacp_list_t\fP list)"
.br
.RI "\fIList destruction\&. \fP"
.ti -1c
.RI "int \fBacp_empty_list\fP (\fBacp_list_t\fP list)"
.br
.ti -1c
.RI "\fBacp_list_it_t\fP \fBacp_end_list\fP (\fBacp_list_t\fP list)"
.br
.RI "\fIQuery for the tail iterator of a list\&. \fP"
.ti -1c
.RI "\fBacp_list_it_t\fP \fBacp_erase_list\fP (\fBacp_list_it_t\fP it)"
.br
.RI "\fIErase a list element\&. \fP"
.ti -1c
.RI "\fBacp_list_it_t\fP \fBacp_erase_range_list\fP (\fBacp_list_it_t\fP start, \fBacp_list_it_t\fP end)"
.br
.ti -1c
.RI "\fBacp_list_it_t\fP \fBacp_front_list\fP (\fBacp_list_t\fP list)"
.br
.ti -1c
.RI "\fBacp_list_it_t\fP \fBacp_insert_list\fP (\fBacp_list_it_t\fP it, const \fBacp_ga_t\fP ga, size_t size, int rank)"
.br
.RI "\fIInsert a list element\&. \fP"
.ti -1c
.RI "\fBacp_list_it_t\fP \fBacp_insert_range_list\fP (\fBacp_list_it_t\fP it, \fBacp_list_it_t\fP start, \fBacp_list_it_t\fP end)"
.br
.ti -1c
.RI "void \fBacp_merge_list\fP (\fBacp_list_t\fP list1, \fBacp_list_t\fP list2, int(*comp)(const \fBacp_list_it_t\fP it1, const \fBacp_list_it_t\fP it2))"
.br
.ti -1c
.RI "void \fBacp_pop_back_list\fP (\fBacp_list_t\fP list)"
.br
.ti -1c
.RI "void \fBacp_pop_front_list\fP (\fBacp_list_t\fP list)"
.br
.ti -1c
.RI "void \fBacp_push_back_list\fP (\fBacp_list_t\fP list, const \fBacp_ga_t\fP ga, size_t size, int rank)"
.br
.RI "\fIErase a list element\&. \fP"
.ti -1c
.RI "void \fBacp_push_front_list\fP (\fBacp_list_t\fP list, const \fBacp_ga_t\fP ga, size_t size, int rank)"
.br
.ti -1c
.RI "void \fBacp_remove_list\fP (\fBacp_list_t\fP list, const \fBacp_ga_t\fP ga, size_t size)"
.br
.ti -1c
.RI "void \fBacp_reverse_list\fP (\fBacp_list_t\fP list)"
.br
.ti -1c
.RI "size_t \fBacp_size_list\fP (\fBacp_list_t\fP list)"
.br
.ti -1c
.RI "size_t \fBacp_sort_list\fP (\fBacp_list_t\fP list, int(*comp)(const \fBacp_list_it_t\fP it1, const \fBacp_list_it_t\fP it2))"
.br
.ti -1c
.RI "void \fBacp_splice_list\fP (\fBacp_list_it_t\fP it, \fBacp_list_t\fP list)"
.br
.ti -1c
.RI "void \fBacp_swap_list\fP (\fBacp_list_t\fP list1, \fBacp_list_t\fP list2)"
.br
.ti -1c
.RI "void \fBacp_unique_list\fP (\fBacp_list_t\fP list)"
.br
.ti -1c
.RI "\fBacp_list_it_t\fP \fBacp_advance_list_it\fP (\fBacp_list_it_t\fP it, int n)"
.br
.ti -1c
.RI "\fBacp_list_it_t\fP \fBacp_decrement_list_it\fP (\fBacp_list_it_t\fP it)"
.br
.RI "\fIDecrement an iterater of a list data\&. \fP"
.ti -1c
.RI "\fBacp_ga_t\fP \fBacp_dereference_list_it\fP (\fBacp_list_it_t\fP it)"
.br
.ti -1c
.RI "int \fBacp_distance_list_it\fP (\fBacp_list_it_t\fP first, \fBacp_list_it_t\fP last)"
.br
.ti -1c
.RI "\fBacp_list_it_t\fP \fBacp_increment_list_it\fP (\fBacp_list_it_t\fP it)"
.br
.RI "\fIIncrement an iterater of a list data\&. \fP"
.ti -1c
.RI "size_t \fBacp_size_list_it\fP (\fBacp_list_it_t\fP it)"
.br
.in -1c
.SH "Detailed Description"
.PP 
ACP Middle Layer Dara Library List 
.SH "Function Documentation"
.PP 
.SS "\fBacp_list_it_t\fP acp_begin_list (\fBacp_list_t\fP list)"

.PP
Query for the head iterator of a list\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlist\fP A reference of list type data\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fImember elem == ACP_GA_NULL\fP Fail 
.br
\fIotherwise\fP The head iterator of the list\&. 
.RE
.PP

.SS "\fBacp_list_t\fP acp_create_list (int rank)"

.PP
List creation\&. Creates a list type data on any process\&.
.PP
\fBParameters:\fP
.RS 4
\fIrank\fP Rank number\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fImember ga == ACP_GA_NULL\fP Fail 
.br
\fIotherwise\fP A reference of created list data\&. 
.RE
.PP

.SS "\fBacp_list_it_t\fP acp_decrement_list_it (\fBacp_list_it_t\fP it)"

.PP
Decrement an iterater of a list data\&. Decrements an iterater of a list data\&.
.PP
\fBParameters:\fP
.RS 4
\fIlist\fP A reference of list type data\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fImember elem == ACP_GA_NULL\fP Fail 
.br
\fIotherwise\fP The previous iterator of the specified one\&. 
.RE
.PP

.SS "void acp_destroy_list (\fBacp_list_t\fP list)"

.PP
List destruction\&. Destroies a list type data\&.
.PP
\fBParameters:\fP
.RS 4
\fIlist\fP A reference of list data\&. 
.RE
.PP

.SS "\fBacp_list_it_t\fP acp_end_list (\fBacp_list_t\fP list)"

.PP
Query for the tail iterator of a list\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlist\fP A reference of list type data\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIit\fP The tail iterator of the list\&. 
.RE
.PP

.SS "\fBacp_list_it_t\fP acp_erase_list (\fBacp_list_it_t\fP it)"

.PP
Erase a list element\&. 
.PP
\fBParameters:\fP
.RS 4
\fIit\fP An iterator of list type data\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fImember elem == ACP_GA_NULL\fP Fail 
.br
\fIoterhwise\fP The iterator that points to the element which is immediately after the erased one\&. 
.RE
.PP

.SS "\fBacp_list_it_t\fP acp_increment_list_it (\fBacp_list_it_t\fP it)"

.PP
Increment an iterater of a list data\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlist\fP A reference of list type data\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fImember elem == ACP_GA_NULL\fP Fail 
.br
\fIotherwise\fP The next iterator of the specified one\&. 
.RE
.PP

.SS "\fBacp_list_it_t\fP acp_insert_list (\fBacp_list_it_t\fP it, const \fBacp_ga_t\fP ga, size_t size, int rank)"

.PP
Insert a list element\&. Copy an element to the specified process and inserts it into the specified position of the list\&.
.PP
\fBParameters:\fP
.RS 4
\fIit\fP An iterater of list type data\&. 
.br
\fIga\fP The global address of the data to be added\&. 
.br
\fIsize\fP Size of the data to be added\&. 
.br
\fIrank\fP Rank of the process in which the element is copied\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fImember elem == ACP_GA_NULL\fP Fail 
.br
\fIotherwise\fP The iterator that points to the inserted element\&. 
.RE
.PP

.SS "void acp_push_back_list (\fBacp_list_t\fP list, const \fBacp_ga_t\fP ga, size_t size, int rank)"

.PP
Erase a list element\&. Inserts a data with specified size into the tail of the list\&.
.PP
\fBParameters:\fP
.RS 4
\fIlist\fP A reference of list type data\&. 
.br
\fIga\fP The global address of the data to be added\&. 
.br
\fIsize\fP The size of the data to be added\&. 
.br
\fIrank\fP Rank of the process in which the element is copied\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for ACP Library from the source code\&.
